{"ast":null,"code":"var _jsxFileName = \"/Users/junhochoi/Desktop/Coding Study/steam/src/components/Game_Detail_Slide.js\",\n  _s = $RefreshSig$();\nimport \"../css/Game_Detail_Slide.css\";\nimport { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport gamesData from \"../gamesData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slide = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const game = gamesData.find(g => g.id === parseInt(id));\n  const navigate = useNavigate();\n  const trainCompartment = [`${game.slideUrl1}`, `${game.slideUrl2}`, `${game.slideUrl3}`, `${game.slideUrl4}`, `${game.slideUrl5}`];\n  console.log(game.slideUrl1);\n  const [curSlide, setCurSlide] = useState(0); // 이미지 슬라이드에서 표출되는 이미지 번호\n  const [intervalId, setIntervalId] = useState(null);\n  const FIRST_SLIDE_INDEX = 0; // 이미지 슬라이드의 시작 번호\n  const LAST_SLIDE_INDEX = trainCompartment.length - 1; // 이미지 슬라이드의 끝 번호\n  const MOVE_SLIDE_INDEX = 1; // 이미지 슬라이드 이동 값\n  const autoMoveSlide = () => {\n    if (intervalId !== null) {\n      clearInterval(intervalId);\n    }\n    setIntervalId(setInterval(() => {\n      setCurSlide(prevState => prevState < LAST_SLIDE_INDEX ? prevState + MOVE_SLIDE_INDEX : FIRST_SLIDE_INDEX);\n    }, 5000));\n  };\n  useEffect(() => {\n    autoMoveSlide();\n    return () => clearInterval(intervalId);\n  }, []);\n  const moveToSlide = value => {\n    if (value === \"next\") {\n      // 슬라이드 끝점에 도달했을 때 curSlide의 값을 바꿔 처음으로 돌아가게 한다.\n      setCurSlide(prevState => prevState < LAST_SLIDE_INDEX ? prevState + MOVE_SLIDE_INDEX : FIRST_SLIDE_INDEX);\n    }\n    if (value === \"prev\") {\n      // 슬라이드 시작점에 도달했을 때 curSlide의 값을 바꿔 마지막으로 돌아가게 한다.\n      setCurSlide(prevState => prevState > FIRST_SLIDE_INDEX ? prevState - MOVE_SLIDE_INDEX : LAST_SLIDE_INDEX);\n    }\n  };\n  const handlePaginationClick = index => {\n    setCurSlide(index);\n    autoMoveSlide(); // curSlide가 변경된 후 setInterval 대기 시간 초기화\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"train\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"prev-button\",\n      onClick: () => moveToSlide(\"prev\"),\n      children: \"<\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"show\",\n      children: trainCompartment.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"compartment\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"img_slide\",\n          src: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"slide-index\",\n      children: trainCompartment.map((_, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `index-item ${curSlide === index ? \"active\" : \"\"}`,\n        onClick: () => handlePaginationClick(index),\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"next-button\",\n      onClick: () => moveToSlide(\"next\"),\n      children: \">\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Slide, \"btXhwW823iGsDq61w4JbSxbaPcw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Slide;\nexport default Slide;\nvar _c;\n$RefreshReg$(_c, \"Slide\");","map":{"version":3,"names":["useState","useEffect","useParams","useNavigate","gamesData","jsxDEV","_jsxDEV","Slide","_s","id","game","find","g","parseInt","navigate","trainCompartment","slideUrl1","slideUrl2","slideUrl3","slideUrl4","slideUrl5","console","log","curSlide","setCurSlide","intervalId","setIntervalId","FIRST_SLIDE_INDEX","LAST_SLIDE_INDEX","length","MOVE_SLIDE_INDEX","autoMoveSlide","clearInterval","setInterval","prevState","moveToSlide","value","handlePaginationClick","index","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","item","src","_","_c","$RefreshReg$"],"sources":["/Users/junhochoi/Desktop/Coding Study/steam/src/components/Game_Detail_Slide.js"],"sourcesContent":["import \"../css/Game_Detail_Slide.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport gamesData from \"../gamesData\";\r\n\r\nconst Slide = () => {\r\n  const { id } = useParams();\r\n  const game = gamesData.find((g) => g.id === parseInt(id));\r\n  const navigate = useNavigate();\r\n\tconst trainCompartment = [\r\n    `${game.slideUrl1}`,\r\n    `${game.slideUrl2}`,\r\n    `${game.slideUrl3}`,\r\n    `${game.slideUrl4}`,\r\n    `${game.slideUrl5}`,\r\n\t];\r\n\tconsole.log(game.slideUrl1);\r\n\r\n  const [curSlide, setCurSlide] = useState(0); // 이미지 슬라이드에서 표출되는 이미지 번호\r\n  const [intervalId, setIntervalId] = useState(null);\r\n\r\n  const FIRST_SLIDE_INDEX = 0; // 이미지 슬라이드의 시작 번호\r\n  const LAST_SLIDE_INDEX = trainCompartment.length - 1; // 이미지 슬라이드의 끝 번호\r\n  const MOVE_SLIDE_INDEX = 1; // 이미지 슬라이드 이동 값\r\n  const autoMoveSlide = () => {\r\n    if (intervalId !== null) {\r\n      clearInterval(intervalId);\r\n    }\r\n\r\n    setIntervalId(\r\n      setInterval(() => {\r\n        setCurSlide((prevState) =>\r\n          prevState < LAST_SLIDE_INDEX\r\n            ? prevState + MOVE_SLIDE_INDEX\r\n            : FIRST_SLIDE_INDEX\r\n        );\r\n      }, 5000)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    autoMoveSlide();\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const moveToSlide = (value) => {\r\n    if (value === \"next\") {\r\n      // 슬라이드 끝점에 도달했을 때 curSlide의 값을 바꿔 처음으로 돌아가게 한다.\r\n      setCurSlide((prevState) =>\r\n        prevState < LAST_SLIDE_INDEX\r\n          ? prevState + MOVE_SLIDE_INDEX\r\n          : FIRST_SLIDE_INDEX\r\n      );\r\n    }\r\n    if (value === \"prev\") {\r\n      // 슬라이드 시작점에 도달했을 때 curSlide의 값을 바꿔 마지막으로 돌아가게 한다.\r\n      setCurSlide((prevState) =>\r\n        prevState > FIRST_SLIDE_INDEX\r\n          ? prevState - MOVE_SLIDE_INDEX\r\n          : LAST_SLIDE_INDEX\r\n      );\r\n    }\r\n  };\r\n  const handlePaginationClick = (index) => {\r\n    setCurSlide(index);\r\n    autoMoveSlide(); // curSlide가 변경된 후 setInterval 대기 시간 초기화\r\n  };\r\n\r\n  return (\r\n    <div className=\"train\">\r\n      <button className=\"prev-button\" onClick={() => moveToSlide(\"prev\")}>\r\n        &#60;\r\n      </button>\r\n      <div className=\"show\">\r\n        {trainCompartment.map((item, index) => (\r\n          <div\r\n            className=\"compartment\"\r\n            key={index}\r\n\r\n          >\r\n            <img className=\"img_slide\" src={item} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <ol className=\"slide-index\">\r\n        {trainCompartment.map((_, index) => (\r\n          <li\r\n            key={index}\r\n            className={`index-item ${curSlide === index ? \"active\" : \"\"}`}\r\n            onClick={() => handlePaginationClick(index)}\r\n          >\r\n            {index + 1}\r\n          </li>\r\n        ))}\r\n      </ol>\r\n      <button className=\"next-button\" onClick={() => moveToSlide(\"next\")}>\r\n        &#62;\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slide;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}