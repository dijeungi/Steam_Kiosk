{"ast":null,"code":"var _jsxFileName = \"/Users/junhochoi/Desktop/Coding Study/steam/src/components/Header.js\",\n  _s = $RefreshSig$();\n// src/components/Header.js\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport SteamLogo from './SteamLogo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = [{\n  name: 'Action',\n  path: '/action'\n}, {\n  name: 'Fear',\n  path: '/fear'\n}, {\n  name: 'Puzzle',\n  path: '/puzzle'\n}, {\n  name: 'RPG',\n  path: '/rpg'\n}, {\n  name: 'Sports',\n  path: '/sports'\n}, {\n  name: 'Simulation',\n  path: '/simulation'\n}, {\n  name: 'FPS',\n  path: '/fps'\n}];\nconst Header = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false); // 버튼 열림 상태 관리\n\n  const toggleMenu = () => {\n    setIsOpen(!isOpen); // 버튼 상태 토글\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(SteamLogo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleMenu,\n      className: \"toggle-button\",\n      children: [isOpen ? '-' : '+', \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), isOpen &&\n    /*#__PURE__*/\n    // isOpen이 true일 때 버튼들 보이기\n    _jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"category-list\",\n        children: categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: category.path,\n            children: category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","Link","SteamLogo","jsxDEV","_jsxDEV","categories","name","path","Header","_s","isOpen","setIsOpen","toggleMenu","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","map","category","index","_c","$RefreshReg$"],"sources":["/Users/junhochoi/Desktop/Coding Study/steam/src/components/Header.js"],"sourcesContent":["// src/components/Header.js\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport SteamLogo from './SteamLogo';\n\nconst categories = [\n  { name: 'Action', path: '/action' },\n  { name: 'Fear', path: '/fear' },\n  { name: 'Puzzle', path: '/puzzle' },\n  { name: 'RPG', path: '/rpg' },\n  { name: 'Sports', path: '/sports' },\n  { name: 'Simulation', path: '/simulation' },\n  { name: 'FPS', path: '/fps' },\n];\n\nconst Header = () => {\n  const [isOpen, setIsOpen] = useState(false); // 버튼 열림 상태 관리\n\n  const toggleMenu = () => {\n    setIsOpen(!isOpen); // 버튼 상태 토글\n  };\n\n  return (\n    <header>\n      <Link to=\"/\"> {/* 스팀 로고를 클릭하면 루트로 이동 */}\n        <SteamLogo />\n      </Link>\n      <button onClick={toggleMenu} className=\"toggle-button\">\n        {isOpen ? '-' : '+'} {/* 버튼이 열리면 '-'로 변경 */}\n      </button>\n      {isOpen && ( // isOpen이 true일 때 버튼들 보이기\n        <nav>\n          <ul className=\"category-list\">\n            {categories.map((category, index) => (\n              <li key={index}>\n                <Link to={category.path}>{category.name}</Link>\n              </li>\n            ))}\n          </ul>\n        </nav>\n      )}\n    </header>\n  );\n};\n\nexport default Header;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,UAAU,GAAG,CACjB;EAAEC,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAU,CAAC,EACnC;EAAED,IAAI,EAAE,MAAM;EAAEC,IAAI,EAAE;AAAQ,CAAC,EAC/B;EAAED,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAU,CAAC,EACnC;EAAED,IAAI,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAO,CAAC,EAC7B;EAAED,IAAI,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAU,CAAC,EACnC;EAAED,IAAI,EAAE,YAAY;EAAEC,IAAI,EAAE;AAAc,CAAC,EAC3C;EAAED,IAAI,EAAE,KAAK;EAAEC,IAAI,EAAE;AAAO,CAAC,CAC9B;AAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE7C,MAAMY,UAAU,GAAGA,CAAA,KAAM;IACvBD,SAAS,CAAC,CAACD,MAAM,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,oBACEN,OAAA;IAAAS,QAAA,gBACET,OAAA,CAACH,IAAI;MAACa,EAAE,EAAC,GAAG;MAAAD,QAAA,GAAC,GAAC,eACZT,OAAA,CAACF,SAAS;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACPd,OAAA;MAAQe,OAAO,EAAEP,UAAW;MAACQ,SAAS,EAAC,eAAe;MAAAP,QAAA,GACnDH,MAAM,GAAG,GAAG,GAAG,GAAG,EAAC,GAAC;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,EACRR,MAAM;IAAA;IAAM;IACXN,OAAA;MAAAS,QAAA,eACET,OAAA;QAAIgB,SAAS,EAAC,eAAe;QAAAP,QAAA,EAC1BR,UAAU,CAACgB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC9BnB,OAAA;UAAAS,QAAA,eACET,OAAA,CAACH,IAAI;YAACa,EAAE,EAAEQ,QAAQ,CAACf,IAAK;YAAAM,QAAA,EAAES,QAAQ,CAAChB;UAAI;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC,GADxCK,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb,CAAC;AAACT,EAAA,CA5BID,MAAM;AAAAgB,EAAA,GAANhB,MAAM;AA8BZ,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}